name: Pre-Release

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["main-dev"]

env:
  GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
  PYTHONUTF8: 1
  PYTHON_VERSION: 3.11
  DOTNET_VERSION: 7.0.x

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read

jobs:
  versioning:
    name: Update Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Run TinySemVer
        uses: ashvardanian/tinysemver@v2.0.7
        with:
          verbose: "true"
          version-file: "VERSION"
          update-version-in: |
            package.json:"version": "(\d+\.\d+\.\d+)"
            package-lock.json:"usearch",\n\s+"version": "(\d+\.\d+\.\d+)"
            CITATION.cff:^version: (\d+\.\d+\.\d+)
            Cargo.toml:^version = "(\d+\.\d+\.\d+)"
            Cargo.lock:name = "usearch"\nversion = "(\d+\.\d+\.\d+)"
            wasmer.toml:^version = "(\d+\.\d+\.\d+)"
            conanfile.py:version = "(\d+\.\d+\.\d+)"
            java/README.md:<version>(\d+\.\d+\.\d+)</version>
            README.md:version = {(\d+\.\d+\.\d+)}
            csharp/nuget/nuget-package.props:>(\d+\.\d+\.\d+)</Version>
            CMakeLists.txt:VERSION (\d+\.\d+\.\d+)
          update-major-version-in: |
            include/usearch/index.hpp:^#define USEARCH_VERSION_MAJOR (\d+)
          update-minor-version-in: |
            include/usearch/index.hpp:^#define USEARCH_VERSION_MINOR (\d+)
          update-patch-version-in: |
            include/usearch/index.hpp:^#define USEARCH_VERSION_PATCH (\d+)
          dry-run: "true"

  test_ubuntu_gcc:
    name: Ubuntu (GCC 14)
    runs-on: ubuntu-24.04
    env:
      CC: gcc
      CXX: g++

    steps:
      - uses: actions/checkout@v4
      - run: git submodule update --init --recursive

        # JavaScript
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci --skip-scripts
      - name: Build JavaScript
        run: npm run build-js
      - name: Test JavaScript
        run: npm test


  test_ubuntu_clang:
    name: Ubuntu (Clang 18)
    runs-on: ubuntu-24.04
    env:
      CC: clang
      CXX: clang++

    steps:
      - uses: actions/checkout@v4
      - run: git submodule update --init --recursive


        # JavaScript
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci --skip-scripts
      - name: Build JavaScript
        run: npm run build-js
      - name: Test JavaScript
        run: npm test


  test_macos:
    name: MacOS
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4
      - run: git submodule update --init --recursive


        # JavaScript
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci --skip-scripts
      - name: Build JavaScript
        run: npm run build-js
      - name: Test JavaScript
        run: npm test

  test_windows:
    name: Windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - run: git submodule update --init --recursive


        # JavaScript
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci --skip-scripts
      - name: Build JavaScript
        run: npm run build-js
      - name: Test JavaScript
        run: npm test

